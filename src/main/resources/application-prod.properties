# Production Configuration
# This configuration is optimized for production deployment

# gRPC server configuration
quarkus.grpc.server.port=9000
quarkus.grpc.server.host=0.0.0.0
# Disable reflection service in production for security
quarkus.grpc.server.reflection-service=false

# gRPC client configuration
quarkus.grpc.clients.userGrpcClient.host=localhost
quarkus.grpc.clients.userGrpcClient.port=9000
quarkus.grpc.clients.userGrpcClient.plain-text=false
# Enable TLS in production
quarkus.grpc.clients.userGrpcClient.ssl.trust-store=classpath:tls/ca-cert.pem

# REST configuration
quarkus.http.port=8080
quarkus.http.host=0.0.0.0

# CORS configuration for production
quarkus.http.cors=true
quarkus.http.cors.origins=/https?://.*\.yourdomain\.com/
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with
quarkus.http.cors.exposed-headers=location,info

# Security headers
quarkus.http.header."X-Frame-Options".value=DENY
quarkus.http.header."X-Content-Type-Options".value=nosniff
quarkus.http.header."X-XSS-Protection".value=1; mode=block
quarkus.http.header."Referrer-Policy".value=strict-origin-when-cross-origin

# Logging configuration for production
quarkus.log.console.json=true
quarkus.log.level=INFO
quarkus.log.category."org.isaac".level=INFO
quarkus.log.category."org.isaac.grpc".level=INFO
quarkus.log.category."org.isaac.rest".level=INFO
quarkus.log.category."org.isaac.service".level=INFO
quarkus.log.category."org.isaac.repository".level=INFO

# Disable debug logging in production
quarkus.log.category."org.isaac.monitoring".level=WARN
quarkus.log.category."io.grpc".level=WARN

# Production service metadata
quarkus.log.console.json.additional-field."service.name".value=grpc-learning-service
quarkus.log.console.json.additional-field."service.version".value=1.0.0
quarkus.log.console.json.additional-field."environment".value=production

# Performance tuning
quarkus.grpc.server.max-inbound-message-size=4194304
quarkus.grpc.server.max-inbound-metadata-size=8192
quarkus.grpc.server.keep-alive-time=30s
quarkus.grpc.server.keep-alive-timeout=5s
quarkus.grpc.server.permit-keep-alive-without-calls=false
quarkus.grpc.server.permit-keep-alive-time=5s

# HTTP/2 configuration
quarkus.http.http2=true

# Health checks
quarkus.smallrye-health.root-path=/health
quarkus.smallrye-health.liveness-path=/health/live
quarkus.smallrye-health.readiness-path=/health/ready

# Metrics
quarkus.micrometer.enabled=true
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.path=/metrics

# OpenAPI documentation (disable in production if not needed)
quarkus.smallrye-openapi.path=/openapi
quarkus.swagger-ui.always-include=false

# Resource limits
quarkus.thread-pool.max-threads=200
quarkus.thread-pool.queue-size=1000

# TLS configuration (uncomment when certificates are available)
# quarkus.grpc.server.ssl.certificate=classpath:tls/server-cert.pem
# quarkus.grpc.server.ssl.key=classpath:tls/server-key.pem
# quarkus.grpc.server.ssl.trust-store=classpath:tls/ca-cert.pem

# Database configuration (if using a database in the future)
# quarkus.datasource.db-kind=postgresql
# quarkus.datasource.username=${DB_USERNAME:grpc_user}
# quarkus.datasource.password=${DB_PASSWORD:grpc_password}
# quarkus.datasource.jdbc.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:grpc_learning}
# quarkus.datasource.jdbc.max-size=20
# quarkus.datasource.jdbc.min-size=5

# Connection pooling
# quarkus.datasource.jdbc.acquisition-timeout=10s
# quarkus.datasource.jdbc.background-validation-interval=2M
# quarkus.datasource.jdbc.foreground-validation-interval=10s
# quarkus.datasource.jdbc.leak-detection-interval=10M
# quarkus.datasource.jdbc.idle-removal-interval=5M
# quarkus.datasource.jdbc.max-lifetime=12H